# .github/workflows/ci.yml
name: Carvera Community Firmware Build

on:
  push:
    tags: ['v*']
  pull_request:
    branches: ['master', 'Dev']
  workflow_dispatch:
env:
  GCC_VERSION: 14.2

jobs:
  pr-checks:
    runs-on: ubuntu-24.04
    permissions:
      checks: write
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Run all checks
        run: ./.github/scripts/run-checks.sh
        env:
          GITHUB_TOKEN:            ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY:       ${{ github.repository }}
          PR_HEAD_SHA:           ${{ github.event.pull_request.head.sha }}
          GITHUB_SHA:              ${{ github.sha }}
          GITHUB_EVENT_PATH:       ${{ github.event_path }}
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-24.04, ubuntu-24.04-arm]
        include:
          - runs-on: ubuntu-24.04
            arch: x86_64
          - runs-on: ubuntu-24.04-arm
            arch: arm64
    runs-on: ${{ matrix.runs-on }}

    outputs:
      version: ${{ steps.set-version.outputs.VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set TOOLCHAIN_DIR
        run: echo "TOOLCHAIN_DIR=$GITHUB_WORKSPACE/toolchain/$GCC_VERSION" >> $GITHUB_ENV

      - name: Set VERSION
        id: set-version
        run: ./.github/scripts/set-version.sh

      - name: Cache compiler toolchain
        uses: actions/cache@v4
        with:
          path: ${{ env.TOOLCHAIN_DIR }}
          key:   ${{ runner.os }}-toolchain-gcc-${{ env.GCC_VERSION }}
          restore-keys: |
            ${{ runner.os }}-toolchain-gcc-

      - name: Build firmware
        run: |
          ./build/build.sh --gcc ${{ env.GCC_VERSION }} --clean VERSION=${{ steps.set-version.outputs.VERSION }}
          cp LPC1768/main.bin firmware-${{ steps.set-version.outputs.VERSION }}.bin      
          tar czf firmware-debug-symbols-${{ steps.set-version.outputs.VERSION }}.tar.gz LPC1768/main.elf LPC1768/main.map

      - name: Upload firmware artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ steps.set-version.outputs.VERSION }}-${{ matrix.arch }}
          path: firmware-${{ steps.set-version.outputs.VERSION }}.bin
          compression-level: 0
          
      - name: Upload debug symbols artifacts
        uses: actions/upload-artifact@v4
        with:
          name: firmware-debug-symbols-${{ steps.set-version.outputs.VERSION }}-${{ matrix.arch }}
          path: firmware-debug-symbols-${{ steps.set-version.outputs.VERSION }}.tar.gz
          compression-level: 0
  release:
    needs: build
    runs-on: ubuntu-24.04
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v4

      - name: Download firmware artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware-${{ needs.build.outputs.version }}-x86_64
          path: release-assets

      - name: Download debug symbols artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware-debug-symbols-${{ needs.build.outputs.version }}-x86_64
          path: release-assets

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          files: |
            release-assets/firmware-${{ needs.build.outputs.version }}.bin
            release-assets/firmware-debug-symbols-${{ needs.build.outputs.version }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}